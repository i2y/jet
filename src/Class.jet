class Class
  def initialize(module_name)
    {module_name: module_name}
  end

  def method_missing(method_name, args)
    if method_name == :new_instance
      apply(:jet_runtime, :new_object, [@module_name, args])
    else
      apply(@module_name, method_name, args)
    end
  end

  def class_info(info_type)
    apply(@module_name, :module_info, [info_type])
  end

  def class_info()
    apply(@module_name, :module_info, [])
  end

  def class_attrs()
    apply(@module_name, :module_info, [:attributes])
  end

  def class_attr_values(attribute_name)
    proplists::get_all_values(attribute_name, class_attrs())
  end
end
