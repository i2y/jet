module jet_tuple
  class Tuple
    include Enumerable

    def initialize(tuple)
      {tuple: tuple}
    end

    def reduce(acc, func)
      list = tuple_to_list(@tuple)
      lists::foldl(func, acc, list)
    end

    def nth(n)
      erlang::element(n, @tuple)
    end

    def set(n, item)
      erlang::setelement(n, @tuple, item)
    end

    def size()
      erlang::tuple_size(@tuple)
    end

    def append(item)
      erlang::append_element(@tuple, item)
    end

    def add(item)
      erlang::append_element(@tuple, item)
    end

    def to_list()
      erlang::tuple_to_list(@tuple)
    end

    def display()
      io::format("~p~n", [@tuple])
    end
  end
end
