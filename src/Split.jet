class Split
  include TaskBase

  def initialize(n)
    {n: n,
     task_list: []}
  end

  def initialize(n, task_list)
    {n: n,
     task_list: task_list}
  end

  def self.split(next_actor, n, values, size_of_values)
    receive
      case :eos
        next_actor ! values
        next_actor ! :eos
      case value
        updated_values = [value, *values]
        if size_of_values == n
          next_actor ! updated_values
          split(next_actor, n, [], 0)
        else
          split(next_actor,
                n,
                updated_values,
                size_of_values + 1)
        end
    end
  end

  def spawn_actor(next_actor)
    spawn(__name__, :split, [next_actor, @n - 1, [], 0])
  end

  def update_task_list(task_list)
    new Split(@n, task_list)
  end
end